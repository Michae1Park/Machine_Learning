%!PS-Adobe-2.0 EPSF-2.0
%%Title: plot3.eps
%%Creator: gnuplot 5.0 patchlevel 2
%%CreationDate: Wed Apr 20 15:11:50 2016
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 2 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (plot3.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 2)
  /Author (jwe)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Apr 20 15:11:50 2016)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
1.00 1.00 1.00 C 0.500 UL
LTb
LCb setrgbcolor
0.500 UL
LTb
LCb setrgbcolor
959 1628 M
2988 702 V
stroke
LTb
LCb setrgbcolor
6241 1415 M
3947 2330 L
stroke
LTb
LCb setrgbcolor
959 1628 M
0 1997 V
stroke
LTb
LCb setrgbcolor
3947 2330 M
0 1997 V
stroke
LTb
LCb setrgbcolor
6241 1415 M
0 1997 V
stroke
LTb
LCb setrgbcolor
959 3625 M
2988 702 V
stroke
LTb
LCb setrgbcolor
6241 3412 M
3947 4327 L
stroke
LTb
LCb setrgbcolor
3253 713 M
87 -35 V
stroke
LTb
LCb setrgbcolor
959 1628 M
-88 35 V
stroke
0.00 0.00 0.00 C 3460 599 M
[ [({}) 200.0 0.0 true true 0 (-1)]
] -66.7 MLshow
0.500 UL
LTb
LCb setrgbcolor
0.500 UL
LTb
LCb setrgbcolor
3999 888 M
88 -35 V
stroke
LTb
LCb setrgbcolor
1706 1804 M
-87 35 V
stroke
0.00 0.00 0.00 C 4206 774 M
[ [({}) 200.0 0.0 true true 0 (-0.5)]
] -66.7 MLshow
0.500 UL
LTb
LCb setrgbcolor
0.500 UL
LTb
LCb setrgbcolor
4746 1064 M
88 -35 V
stroke
LTb
LCb setrgbcolor
2454 1979 M
-88 35 V
stroke
0.00 0.00 0.00 C 4953 950 M
[ [({}) 200.0 0.0 true true 0 (0)]
] -66.7 MLshow
0.500 UL
LTb
LCb setrgbcolor
0.500 UL
LTb
LCb setrgbcolor
5494 1240 M
87 -35 V
stroke
LTb
LCb setrgbcolor
3201 2155 M
-88 35 V
stroke
0.00 0.00 0.00 C 5701 1125 M
[ [({}) 200.0 0.0 true true 0 (0.5)]
] -66.7 MLshow
0.500 UL
LTb
LCb setrgbcolor
0.500 UL
LTb
LCb setrgbcolor
6241 1415 M
88 -35 V
stroke
LTb
LCb setrgbcolor
3947 2330 M
-87 35 V
stroke
0.00 0.00 0.00 C 6448 1301 M
[ [({}) 200.0 0.0 true true 0 (1)]
] -66.7 MLshow
0.500 UL
LTb
LCb setrgbcolor
0.500 UL
LTb
LCb setrgbcolor
3253 713 M
-70 -17 V
stroke
LTb
LCb setrgbcolor
6241 1415 M
70 17 V
stroke
0.00 0.00 0.00 C 3088 659 M
[ [({}) 200.0 0.0 true true 0 (-1)]
] -66.7 MCshow
0.500 UL
LTb
LCb setrgbcolor
0.500 UL
LTb
LCb setrgbcolor
2679 942 M
-70 -17 V
stroke
LTb
LCb setrgbcolor
5668 1644 M
70 16 V
stroke
0.00 0.00 0.00 C 2514 888 M
[ [({}) 200.0 0.0 true true 0 (-0.5)]
] -66.7 MCshow
0.500 UL
LTb
LCb setrgbcolor
0.500 UL
LTb
LCb setrgbcolor
2106 1170 M
-70 -16 V
stroke
LTb
LCb setrgbcolor
5094 1873 M
70 16 V
stroke
0.00 0.00 0.00 C 1941 1117 M
[ [({}) 200.0 0.0 true true 0 (0)]
] -66.7 MCshow
0.500 UL
LTb
LCb setrgbcolor
0.500 UL
LTb
LCb setrgbcolor
1532 1399 M
-70 -16 V
stroke
LTb
LCb setrgbcolor
4521 2101 M
70 17 V
stroke
0.00 0.00 0.00 C 1367 1346 M
[ [({}) 200.0 0.0 true true 0 (0.5)]
] -66.7 MCshow
0.500 UL
LTb
LCb setrgbcolor
0.500 UL
LTb
LCb setrgbcolor
959 1628 M
-70 -16 V
stroke
LTb
LCb setrgbcolor
3947 2330 M
70 17 V
stroke
0.00 0.00 0.00 C 794 1574 M
[ [({}) 200.0 0.0 true true 0 (1)]
] -66.7 MCshow
0.500 UL
LTb
LCb setrgbcolor
0.500 UL
LTb
LCb setrgbcolor
959 1628 M
-88 0 V
stroke
0.00 0.00 0.00 C 744 1628 M
[ [({}) 200.0 0.0 true true 0 (0)]
] -66.7 MRshow
0.500 UL
LTb
LCb setrgbcolor
0.500 UL
LTb
LCb setrgbcolor
6241 1415 M
88 0 V
stroke
LTb
LCb setrgbcolor
959 2028 M
-88 0 V
stroke
0.00 0.00 0.00 C 744 2028 M
[ [({}) 200.0 0.0 true true 0 (0.2)]
] -66.7 MRshow
0.500 UL
LTb
LCb setrgbcolor
0.500 UL
LTb
LCb setrgbcolor
6241 1815 M
88 0 V
stroke
LTb
LCb setrgbcolor
959 2427 M
-88 0 V
stroke
0.00 0.00 0.00 C 744 2427 M
[ [({}) 200.0 0.0 true true 0 (0.4)]
] -66.7 MRshow
0.500 UL
LTb
LCb setrgbcolor
0.500 UL
LTb
LCb setrgbcolor
6241 2214 M
88 0 V
stroke
LTb
LCb setrgbcolor
959 2826 M
-88 0 V
stroke
0.00 0.00 0.00 C 744 2826 M
[ [({}) 200.0 0.0 true true 0 (0.6)]
] -66.7 MRshow
0.500 UL
LTb
LCb setrgbcolor
0.500 UL
LTb
LCb setrgbcolor
6241 2613 M
88 0 V
stroke
LTb
LCb setrgbcolor
959 3225 M
-88 0 V
stroke
0.00 0.00 0.00 C 744 3225 M
[ [({}) 200.0 0.0 true true 0 (0.8)]
] -66.7 MRshow
0.500 UL
LTb
LCb setrgbcolor
0.500 UL
LTb
LCb setrgbcolor
6241 3012 M
88 0 V
stroke
LTb
LCb setrgbcolor
959 3625 M
-88 0 V
stroke
0.00 0.00 0.00 C 744 3625 M
[ [({}) 200.0 0.0 true true 0 (1)]
] -66.7 MRshow
0.500 UL
LTb
LCb setrgbcolor
0.500 UL
LTb
LCb setrgbcolor
6241 3412 M
88 0 V
stroke
0.00 0.00 0.00 C 119 2626 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [({}) 200.0 0.0 true true 0 (z)]
] -66.7 MCshow
grestore
LTb
0.00 0.00 0.00 C 3600 4659 M
[ [({}) 200.0 0.0 true true 0 (plot3 display of 3-D helix)]
] -66.7 MCshow
LTb
1.000 UP
% Begin plot #1
0.500 UL
LTb
0.00 0.00 1.00 C 0.00 0.00 1.00 C 3600 1522 M
-3 7 V
-2 9 V
-1 8 V
0 8 V
2 8 V
3 9 V
2 8 V
5 8 V
7 8 V
7 7 V
8 8 V
9 7 V
9 6 V
10 7 V
11 5 V
10 6 V
11 4 V
10 5 V
10 4 V
8 3 V
9 3 V
6 3 V
6 2 V
4 2 V
3 1 V
1 1 V
-1 2 V
-3 1 V
-6 1 V
-7 1 V
-9 1 V
-12 2 V
-13 1 V
-16 2 V
-17 3 V
-19 3 V
-21 3 V
-21 5 V
-24 4 V
-24 6 V
-25 7 V
-26 7 V
-25 8 V
-25 9 V
-25 10 V
-24 11 V
-23 11 V
-21 13 V
-20 13 V
-18 14 V
-15 14 V
-12 16 V
-10 15 V
-6 16 V
-4 17 V
1 17 V
3 16 V
8 17 V
11 17 V
14 17 V
19 16 V
21 15 V
25 15 V
29 15 V
31 13 V
34 13 V
37 11 V
39 11 V
40 9 V
41 8 V
42 7 V
44 5 V
43 4 V
43 3 V
41 1 V
41 0 V
39 -1 V
36 -3 V
33 -4 V
31 -5 V
27 -6 V
22 -7 V
19 -8 V
14 -8 V
8 -9 V
4 -10 V
-1 -9 V
-7 -10 V
-12 -10 V
-17 -9 V
-23 -9 V
-28 -8 V
-33 -7 V
-38 -7 V
-42 -5 V
-47 -4 V
-50 -3 V
-53 -1 V
-57 1 V
-58 2 V
-59 4 V
-61 6 V
-62 7 V
-61 10 V
stroke 3404 2002 M
-61 12 V
-59 13 V
-57 15 V
-54 18 V
-51 19 V
-47 20 V
-42 22 V
-38 24 V
-31 24 V
-26 26 V
-20 27 V
-13 27 V
-6 28 V
1 28 V
9 28 V
15 28 V
23 27 V
29 27 V
37 26 V
43 25 V
49 23 V
56 22 V
60 20 V
66 19 V
69 16 V
74 15 V
76 12 V
78 10 V
79 7 V
80 5 V
80 3 V
79 0 V
76 -2 V
75 -5 V
70 -7 V
67 -10 V
61 -11 V
56 -13 V
49 -16 V
42 -16 V
35 -18 V
26 -18 V
19 -20 V
9 -21 V
1 -21 V
-8 -21 V
-17 -21 V
-26 -20 V
-36 -20 V
-43 -18 V
-52 -17 V
-60 -16 V
-67 -14 V
-74 -12 V
-80 -9 V
-85 -7 V
-90 -5 V
-93 -1 V
-96 1 V
-97 4 V
-99 7 V
-99 10 V
-97 14 V
-96 16 V
-92 19 V
-88 22 V
-82 25 V
-77 27 V
-70 30 V
-63 32 V
-53 34 V
-45 35 V
-36 37 V
-25 38 V
-15 39 V
-4 39 V
7 39 V
17 40 V
29 38 V
39 38 V
49 37 V
60 35 V
68 34 V
78 31 V
86 29 V
94 26 V
100 23 V
106 21 V
110 17 V
114 13 V
116 10 V
116 7 V
118 3 V
116 -1 V
114 -4 V
111 -8 V
105 -11 V
101 -14 V
93 -18 V
85 -20 V
77 -23 V
67 -26 V
56 -27 V
46 -29 V
stroke 4801 2948 M
33 -31 V
22 -31 V
9 -33 V
-3 -32 V
-17 -33 V
-29 -31 V
-41 -31 V
-54 -30 V
-66 -28 V
-77 -26 V
-87 -24 V
-97 -20 V
-106 -18 V
-114 -15 V
-121 -11 V
-127 -7 V
-131 -4 V
-134 1 V
-134 5 V
-137 8 V
-135 14 V
-133 17 V
-130 21 V
-124 25 V
-118 30 V
-111 32 V
-102 36 V
-92 40 V
-81 42 V
-69 44 V
-57 47 V
-44 48 V
-30 50 V
-15 50 V
-1 51 V
13 51 V
28 50 V
43 50 V
56 48 V
71 47 V
83 44 V
96 41 V
107 39 V
118 35 V
127 32 V
135 28 V
142 23 V
148 19 V
151 15 V
153 10 V
155 5 V
155 1 V
152 -5 V
149 -9 V
144 -13 V
137 -18 V
128 -22 V
119 -26 V
109 -30 V
97 -33 V
83 -35 V
70 -39 V
55 -40 V
39 -42 V
24 -43 V
7 -44 V
-9 -44 V
-26 -44 V
-42 -43 V
-58 -41 V
-73 -40 V
-89 -37 V
-103 -34 V
-116 -32 V
-128 -27 V
-139 -24 V
-148 -19 V
-157 -15 V
-164 -10 V
-168 -5 V
-173 1 V
-172 5 V
-174 11 V
-172 17 V
-168 21 V
-163 27 V
-156 32 V
-148 36 V
-138 41 V
-125 45 V
-114 49 V
-98 52 V
-84 56 V
-68 57 V
-50 60 V
-33 61 V
-15 62 V
3 63 V
21 62 V
40 62 V
58 60 V
76 58 V
92 56 V
108 53 V
stroke 2169 3875 M
124 50 V
137 45 V
% End plot #1
stroke
LTb
LCb setrgbcolor
6241 1415 M
3253 713 L
stroke
LTb
LCb setrgbcolor
959 1628 M
3253 713 L
stroke
LTb
LCb setrgbcolor
3253 713 M
0 1997 V
stroke
LTb
LCb setrgbcolor
959 3625 M
3253 2710 L
stroke
LTb
LCb setrgbcolor
6241 3412 M
3253 2710 L
stroke
0.00 0.00 0.00 C 5408 800 M
[ [({}) 200.0 0.0 true true 0 (r.*sin \(t\))]
] -66.7 MCshow
LTb
0.00 0.00 0.00 C 1289 978 M
[ [({}) 200.0 0.0 true true 0 (r.*cos \(t\))]
] -66.7 MCshow
LTb
0.00 0.00 0.00 C 119 2626 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [({}) 200.0 0.0 true true 0 (z)]
] -66.7 MCshow
grestore
LTb
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
